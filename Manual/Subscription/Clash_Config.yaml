port: 7890
socks-port: 7891
mixed-port: 7892
redir-port: 7893
tproxy-port: 7894

unified-delay: true
geodata-mode: false
geo-auto-update: true
geo-update-interval: 24
tcp-concurrent: true
find-process-mode: strict
global-client-fingerprint: chrome
allow-lan: true
mode: rule
log-level: info
ipv6: true
udp: true

external-controller: 0.0.0.0:9090

geox-url:
  mmdb: 'https://geodata.kelee.one/Country-Masaiki.mmdb'
  asn: 'https://geodata.kelee.one/GeoLite2-ASN-P3TERX.mmdb'

profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]

tun:
  enable: true
  stack: system
  dns-hijack:
    - any:53
  auto-route: true
  auto-detect-interface: true

listeners:
- name: socks5-in-1
  type: socks
  port: 10808
  listen: 0.0.0.0
  udp: true
  proxy: DIRECT

dns:
  enable: true
  prefer-h3: true
  listen: 0.0.0.0:1053
  ipv6: false
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter:
    - "*"
    - +.lan
  default-nameserver:
    - 223.5.5.5
    - 223.6.6.6
  nameserver:
    - https://223.5.5.5/dns-query
    - https://223.6.6.6/dns-query

# 节点订阅参数
NodeParam: &NodeParam
  {type: http, interval: 3600, health-check: {enable: true, url: 'http://www.google.com/blank.html', interval: 6}}

proxy-providers:
  机场1:
    url: '机场1订阅地址'
    <<: *NodeParam
    path: './proxy_providers/机场1.yaml'
    override:
      additional-prefix: "[机场1] "

# 全局节点筛选
FilterAll: &FilterAll '^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网址|获取|订阅|流量|到期|机场|下次|版本|官址|过期|联系|邮箱|公告|倒卖|国内|访问|支持|教程|更新|福利|(\d{4}-\d{2}-\d{2}|\dG))).*$'

# AI 专用节点筛选（美国相关节点）
FilterAI: &FilterAI '(?i)(美国|US|United|California|New York|Los Angeles)'

# 策略参数锚点
UrlTest: &UrlTest {type: url-test, interval: 6, tolerance: 20, lazy: true, url: 'http://www.google.com/blank.html', timeout: 2000, max-failed-times: 3, include-all-providers: true}

# 策略组
proxy-groups:
  - {name: 手动选择, type: select, include-all-providers: true, filter: *FilterAll}
  - {name: 最优节点, <<: *UrlTest, filter: *FilterAll}
  - {name: 代理服务, type: select, proxies: [手动选择, 最优节点]}
  - {name: AI, type: select, include-all-providers: true, filter: *FilterAI}
  - {name: 兜底策略, <<: *UrlTest, proxies: [最优节点, 手动选择, DIRECT]}

# 规则订阅
rule-providers:
  LAN: {type: http, behavior: classical, interval: 3600, format: yaml, proxy: DIRECT, path: './rules/LAN.yaml', url: 'https://kelee.one/Tool/Clash/Rule/LAN_SPLITTER.yaml'}
  Proxy: {type: http, behavior: classical, interval: 3600, format: yaml, proxy: DIRECT, path: './rules/Proxy.yaml', url: 'https://whatshub.top/rule/Proxy.list'}
  AI: {type: http, behavior: classical, interval: 3600, format: yaml, proxy: DIRECT, path: './rules/AI.yaml', url: 'https://raw.githubusercontent.com/fmz200/wool_scripts/main/Loon/rule/AI.list'}

# 规则
rules:
  - RULE-SET, LAN, DIRECT
  - RULE-SET, Proxy, 代理服务
  - RULE-SET, AI, AI
  - GEOIP, CN, DIRECT
  - MATCH, 兜底策略
